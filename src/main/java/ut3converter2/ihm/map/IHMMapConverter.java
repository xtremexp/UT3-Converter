/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * IHMMapConverter.java
 *
 * Created on 27 avr. 2009, 21:35:42
 */

package ut3converter2.ihm.map;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.text.MaskFormatter;
import ut3converter2.Main;
import ut3converter2.convert.DeusExToUT2k4Conv;
import ut3converter2.convert.UT2k4ToUT3Conv;
import ut3converter2.convert.U1UT99ToUT2k4Conv;
import ut3converter2.UTGames;
import ut3converter2.convert.MapConverter;
import ut3converter2.convert.U2ToUT3Conv;
import ut3converter2.convert.U1UT99ToUT3Conv;
import ut3converter2.ihm.FileChooser2;

/**
 *
 * @author Hyperion
 */
public class IHMMapConverter extends javax.swing.JDialog {

    MapConverter mc;

    public IHMMapConverter(MapConverter mc) {
        super();
        initComponents();
        this.mc = mc;

        jtfinputmap.setText(mc.getInputfile().getAbsolutePath());
        jtfoutputfolder.setText(mc.getOutputfolder().getAbsolutePath());

        if (mc.getInput_utgame() != UTGames.U1 && mc.getInput_utgame() != UTGames.UT99) {
            jbtnaddcustomutpack.setEnabled(false);
            jxlistcustutpack.setEnabled(false);
        }


        jcbumcfile.setEnabled(Boolean.valueOf(mc.getDefumc()[0].toString()));
        jcbumcfile.setModel(new DefaultComboBoxModel((String[]) mc.getDefumc()[1]));
        jcbumcfile.setSelectedItem(mc.getDefumc()[2]);
        jcbScaleFactor.setSelectedItem(mc.getDefscalefac());

        jtfpacname.setText(getPackageName(mc.getInputfile().getName().split("\\.")[0]));
        jtfpacname.setEnabled(mc.isCanChangePackage());
        jbtnaddcustomutpack.setEnabled(mc.isCanAddPackagetoAnalyze());
        jxlistcustutpack.setEnabled(mc.isCanAddPackagetoAnalyze());
        jtfinputgame.setText(UTGames.getUTGame(mc.getInput_utgame()));
        jtfoutputgame.setText(UTGames.getUTGame(mc.getOutput_utgame()));
        jcbScaleFactor.setEnabled(mc.isCanChangeScale());
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }


    public void setCanSetScaleFactor(boolean bcansetscalefac)
    {
        this.jcbScaleFactor.setEnabled(bcansetscalefac);
    }

    protected MaskFormatter createFormatter(String s) {
    MaskFormatter formatter = null;
    try {
        formatter = new MaskFormatter(s);
    } catch (java.text.ParseException exc) {
        System.err.println("formatter is bad: " + exc.getMessage());
        System.exit(-1);
    }
    return formatter;
}

    public void setCanChooseSacPac(boolean canchoosepac)
    {
        this.jtfpacname.setEditable(canchoosepac);
        this.jtfpacname.setEnabled(canchoosepac);
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXPanel1 = new org.jdesktop.swingx.JXPanel();
        jXPanel3 = new org.jdesktop.swingx.JXPanel();
        jPanel1 = new javax.swing.JPanel();
        jbtnaddcustomutpack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jxlistcustutpack = new org.jdesktop.swingx.JXList();
        jXPanel4 = new org.jdesktop.swingx.JXPanel();
        jlbInputMap = new javax.swing.JLabel();
        jtfinputmap = new javax.swing.JTextField();
        jblOutputFolder = new javax.swing.JLabel();
        jtfoutputfolder = new javax.swing.JTextField();
        jblscalefactor = new javax.swing.JLabel();
        jcbScaleFactor = new javax.swing.JComboBox();
        jlblUmc = new javax.swing.JLabel();
        jcbumcfile = new javax.swing.JComboBox();
        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        jtfpacname = new javax.swing.JTextField();
        jlbInputMap1 = new javax.swing.JLabel();
        jtfinputgame = new javax.swing.JTextField();
        jlbInputMap2 = new javax.swing.JLabel();
        jtfoutputgame = new javax.swing.JTextField();
        jXPanel2 = new org.jdesktop.swingx.JXPanel();
        jbtnconvert = new javax.swing.JButton();
        jbtnclose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("ut3converter2/ihm/map/Bundle"); // NOI18N
        setTitle(bundle.getString("IHMMapConverter.title")); // NOI18N

        jXPanel1.setLayout(new java.awt.BorderLayout());

        jXPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("IHMMapConverter.jXPanel3.border.title"))); // NOI18N

        jbtnaddcustomutpack.setText(bundle.getString("IHMMapConverter.jbtnaddcustomutpack.text")); // NOI18N
        jbtnaddcustomutpack.setToolTipText(bundle.getString("IHMMapConverter.jbtnaddcustomutpack.toolTipText")); // NOI18N
        jbtnaddcustomutpack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnaddcustomutpackActionPerformed(evt);
            }
        });
        jPanel1.add(jbtnaddcustomutpack);

        jLabel1.setText(bundle.getString("IHMMapConverter.jLabel1.text")); // NOI18N

        jScrollPane1.setViewportView(jxlistcustutpack);

        javax.swing.GroupLayout jXPanel3Layout = new javax.swing.GroupLayout(jXPanel3);
        jXPanel3.setLayout(jXPanel3Layout);
        jXPanel3Layout.setHorizontalGroup(
            jXPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jXPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jXPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE))
                .addContainerGap())
        );
        jXPanel3Layout.setVerticalGroup(
            jXPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jXPanel3Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jXPanel1.add(jXPanel3, java.awt.BorderLayout.CENTER);

        jXPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("IHMMapConverter.jXPanel4.border.title"))); // NOI18N

        jlbInputMap.setText(bundle.getString("IHMMapConverter.jlbInputMap.text")); // NOI18N

        jtfinputmap.setEditable(false);
        jtfinputmap.setToolTipText(bundle.getString("IHMMapConverter.jtfinputmap.toolTipText")); // NOI18N

        jblOutputFolder.setText(bundle.getString("IHMMapConverter.jblOutputFolder.text")); // NOI18N

        jtfoutputfolder.setEditable(false);
        jtfoutputfolder.setToolTipText(bundle.getString("IHMMapConverter.jtfoutputfolder.toolTipText")); // NOI18N
        jtfoutputfolder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtfoutputfolderMousePressed(evt);
            }
        });

        jblscalefactor.setText(bundle.getString("IHMMapConverter.jblscalefactor.text")); // NOI18N

        jcbScaleFactor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0.5X", "0.8X", "0.85X", "0.9X", "0.95X", "1X", "1.1X", "1.25X", "1.5X", "2X" }));
        jcbScaleFactor.setToolTipText(bundle.getString("IHMMapConverter.jcbScaleFactor.toolTipText")); // NOI18N

        jlblUmc.setText(bundle.getString("IHMMapConverter.jlblUmc.text")); // NOI18N

        jcbumcfile.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Unreal1.umc", "Unreal2.umc" }));

        jXLabel1.setText(bundle.getString("IHMMapConverter.jXLabel1.text")); // NOI18N

        jtfpacname.setEditable(false);
        jtfpacname.setToolTipText(bundle.getString("IHMMapConverter.jtfpacname.toolTipText")); // NOI18N
        jtfpacname.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtfpacnameMousePressed(evt);
            }
        });

        jlbInputMap1.setText(bundle.getString("IHMMapConverter.jlbInputMap1.text")); // NOI18N

        jtfinputgame.setEditable(false);
        jtfinputgame.setToolTipText(bundle.getString("IHMMapConverter.jtfinputgame.toolTipText")); // NOI18N

        jlbInputMap2.setText(bundle.getString("IHMMapConverter.jlbInputMap2.text")); // NOI18N

        jtfoutputgame.setEditable(false);
        jtfoutputgame.setToolTipText(bundle.getString("IHMMapConverter.jtfoutputgame.toolTipText")); // NOI18N

        javax.swing.GroupLayout jXPanel4Layout = new javax.swing.GroupLayout(jXPanel4);
        jXPanel4.setLayout(jXPanel4Layout);
        jXPanel4Layout.setHorizontalGroup(
            jXPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXPanel4Layout.createSequentialGroup()
                .addGroup(jXPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jXPanel4Layout.createSequentialGroup()
                        .addGroup(jXPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jXLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlblUmc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jblscalefactor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jblOutputFolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlbInputMap, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jXPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfinputmap, javax.swing.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE)
                            .addComponent(jtfoutputfolder, javax.swing.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE)
                            .addComponent(jcbScaleFactor, 0, 533, Short.MAX_VALUE)
                            .addComponent(jcbumcfile, 0, 533, Short.MAX_VALUE)
                            .addComponent(jtfpacname, javax.swing.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE)))
                    .addGroup(jXPanel4Layout.createSequentialGroup()
                        .addComponent(jlbInputMap1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jtfinputgame, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jlbInputMap2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtfoutputgame, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        jXPanel4Layout.setVerticalGroup(
            jXPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jXPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbInputMap1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfinputgame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfoutputgame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbInputMap2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jXPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbInputMap, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfinputmap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jXPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jblOutputFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfoutputfolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jXPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jblscalefactor, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbScaleFactor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jXPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblUmc, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbumcfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jXPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfpacname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jXPanel1.add(jXPanel4, java.awt.BorderLayout.NORTH);

        getContentPane().add(jXPanel1, java.awt.BorderLayout.CENTER);

        jbtnconvert.setText(bundle.getString("IHMMapConverter.jbtnconvert.text")); // NOI18N
        jbtnconvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnconvertActionPerformed(evt);
            }
        });
        jXPanel2.add(jbtnconvert);

        jbtnclose.setText(bundle.getString("IHMMapConverter.jbtnclose.text")); // NOI18N
        jbtnclose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtncloseActionPerformed(evt);
            }
        });
        jXPanel2.add(jbtnclose);

        getContentPane().add(jXPanel2, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtncloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtncloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbtncloseActionPerformed

    private void jbtnconvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnconvertActionPerformed

        File fcustutpack[] = new File[jxlistcustutpack.getElementCount()];
        for (int i = 0; i < jxlistcustutpack.getElementCount(); i++) {
            fcustutpack[i] = new File(jxlistcustutpack.getStringAt(i));
        }

        mc.setDefaultpackage(jtfpacname.getText());
        mc.setScalefactor(Double.valueOf(jcbScaleFactor.getSelectedItem().toString().split("X")[0]));
        mc.setDefumcfile(jcbumcfile.getSelectedItem().toString());
        mc.addUTCustomPackages(fcustutpack);


        this.jbtnconvert.setEnabled(false);
        File f = new File(jtfoutputfolder.getText());
        if (!f.exists()) {
            f.mkdir();
        }
        if (mc.getInput_utgame() == UTGames.U1) {
            if (mc.getOutput_utgame() == UTGames.UT2004) {
                SwingUtilities.invokeLater(new Runnable() {

                    @Override
                    public void run() {
                            U1UT99ToUT2k4Conv ut = new U1UT99ToUT2k4Conv();
                            ut = (U1UT99ToUT2k4Conv) mc;
                            ut.Convert();
                    }
                });

            }
            if (mc.getOutput_utgame() == UTGames.UT3) {
                SwingUtilities.invokeLater(new Runnable() {

                    @Override
                    public void run() {
                        try {
                            U1UT99ToUT3Conv ut = new U1UT99ToUT3Conv();
                            ut = (U1UT99ToUT3Conv) mc;
                            ut.convert();
                        } catch (Exception ex) {
                            Logger.getLogger(IHMMapConverter.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                });

            }
        }
        if (mc.getInput_utgame() == UTGames.UT99) {
            if (mc.getOutput_utgame() == UTGames.UT2004) {
                SwingUtilities.invokeLater(new Runnable() {

                    @Override
                    public void run() {
                        try {
                            U1UT99ToUT2k4Conv ut = new U1UT99ToUT2k4Conv();
                            ut = (U1UT99ToUT2k4Conv) mc;
                            ut.Convert();
                        } catch (Exception ex) {
                            Logger.getLogger(IHMMapConverter.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                });

            } else if (mc.getOutput_utgame() == UTGames.UT3) {
                SwingUtilities.invokeLater(new Runnable() {

                    @Override
                    public void run() {
                        try {
                            U1UT99ToUT3Conv ut = new U1UT99ToUT3Conv();
                            ut = (U1UT99ToUT3Conv) mc;
                            ut.convert();
                        } catch (Exception ex) {
                            Logger.getLogger(IHMMapConverter.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                });

            }
        }
        if (mc.getInput_utgame() == UTGames.U2) {
            if (mc.getOutput_utgame() == UTGames.UT3) {
                SwingUtilities.invokeLater(new Runnable() {

                    @Override
                    public void run() {
                        try {
                            U2ToUT3Conv ut = new U2ToUT3Conv();
                            ut = (U2ToUT3Conv) mc;
                            ut.convert();
                        } catch (Exception ex) {
                            Logger.getLogger(IHMMapConverter.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                });

            }
        }
        if (mc.getInput_utgame() == UTGames.UT2004) {
            if (mc.getOutput_utgame() == UTGames.UT3) {
                if (removeChar(jtfpacname.getText(), 32).length() == 0) {
                    JOptionPane.showMessageDialog(null, "<html>You need to specify the package name<br> where you will save map ressources<br>(e.g.: \"MyUTPackage\" (.upk)", "Error!", JOptionPane.ERROR_MESSAGE);
                } else {

                    SwingUtilities.invokeLater(new Runnable() {

                        @Override
                        public void run() {
                            try {
                                UT2k4ToUT3Conv u2 = new UT2k4ToUT3Conv();
                                u2 = (UT2k4ToUT3Conv) mc;
                                u2.convert();
                            } catch (Exception ex) {
                                Logger.getLogger(IHMMapConverter.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    });

                }
            }
        }
        if (mc.getInput_utgame() == UTGames.DeusEx) {
            if (mc.getOutput_utgame() == UTGames.UT2004) {
                SwingUtilities.invokeLater(new Runnable() {

                    @Override
                    public void run() {
                        DeusExToUT2k4Conv ut = new DeusExToUT2k4Conv();
                        ut = (DeusExToUT2k4Conv) mc;
                        try {
                            ut.convert();
                        } catch (Exception ex) {
                            Logger.getLogger(IHMMapConverter.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                });

            }
        }
        this.dispose();
    }//GEN-LAST:event_jbtnconvertActionPerformed

    private void jtfpacnameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfpacnameMousePressed
        // TODO add your handling code here:
        if(jtfpacname.isEnabled())
        {
            String pacname = JOptionPane.showInputDialog("Package name?",jtfpacname.getText());
            if(pacname!=null)
            {
                int charvalue;
                boolean pacnameok=true;
                for(int i=0;i<pacname.length();i++)
                {
                    charvalue = pacname.charAt(i);

                    if(((charvalue>64)&&(charvalue<91))||((charvalue>96)&&(charvalue<123))||((charvalue>47)&&(charvalue<58)) || (charvalue==45))
                    {

                    }
                    else
                    {
                        pacnameok = false;
                        i = pacname.length();
                    }
                }

                if(pacname.length()==0)
                {
                    pacnameok = false;
                }
                if(!pacnameok)
                {
                    if(pacname.length()==0)
                    {
                            JOptionPane.showMessageDialog(null, "<html>The package name must not be empty!</html>", "Error!", JOptionPane.ERROR_MESSAGE);
                    }
                    else
                    {
                            JOptionPane.showMessageDialog(null, "<html>The package name must NOT containt special chars<br>but only letters and numbers and \"-\" (a->z,0->9)!</html>", "Error!", JOptionPane.ERROR_MESSAGE);
                    }
                }
                else{jtfpacname.setText(pacname);}
            }
            
        }
        
    }//GEN-LAST:event_jtfpacnameMousePressed

    private void jtfoutputfolderMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfoutputfolderMousePressed
        // TODO add your handling code here:
        File f = FileChooser2.getFolder("Select your output folder");
        if(f!=null)
        {
            jtfoutputfolder.setText(f.getAbsolutePath());
        }
    }//GEN-LAST:event_jtfoutputfolderMousePressed

    private void jbtnaddcustomutpackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnaddcustomutpackActionPerformed
        // TODO add your handling code here:
        File[] f = FileChooser2.getFiles("Select UT/U1 texture packages", "Texture packages (.utx)",new String[]{"utx"},Main.config.getUTxRootFolder(mc.getInput_utgame()));
    }//GEN-LAST:event_jbtnaddcustomutpackActionPerformed

    private String removeChar(String line,int numchar)
    {
        String tmp="";
        int nchar=0;

        for(int i=0;i<line.length();i++)
        {
            nchar=(int)line.charAt(i);
            if(nchar!=numchar)
            {
                tmp += line.charAt(i);
            }
        }
        return tmp;
    }

    class myVerifier extends InputVerifier{

        @Override
        public boolean verify(JComponent input) {
            JTextField jtf = (JTextField) input;
            if(jtf.getText().length()<3)
            {
                return false;
            }
            else
            {
                return true;
            }
        }

    }

    /**
     * EX: "DM-Phobos"->"Phobos"
     * @param mapname
     * @return
     */
    private String getPackageName(String mapname)
    {
        if((mc.getOutput_utgame()==UTGames.UT2004)||(mc.getOutput_utgame()==UTGames.UT99)||(mc.getOutput_utgame()==UTGames.U1))
        {
            return "myLevel";
        }
        int charvalue=0;
        int count=0;
        String pacname="";

        if(mapname.contains("-"))
        {
            mapname = mapname.substring(mapname.indexOf("-"));
        }
        String tmp;
        for(int i=0;i<mapname.length();i++)
        {
            charvalue = mapname.charAt(i);

            if(((charvalue>64)&&(charvalue<91))||((charvalue>96)&&(charvalue<123)))
            {
                if(count<10)
                {
                    pacname += mapname.charAt(i);
                }
                count ++;
            }
            
        }

        return pacname;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private org.jdesktop.swingx.JXPanel jXPanel1;
    private org.jdesktop.swingx.JXPanel jXPanel2;
    private org.jdesktop.swingx.JXPanel jXPanel3;
    private org.jdesktop.swingx.JXPanel jXPanel4;
    private javax.swing.JLabel jblOutputFolder;
    private javax.swing.JLabel jblscalefactor;
    private javax.swing.JButton jbtnaddcustomutpack;
    private javax.swing.JButton jbtnclose;
    private javax.swing.JButton jbtnconvert;
    private javax.swing.JComboBox jcbScaleFactor;
    private javax.swing.JComboBox jcbumcfile;
    private javax.swing.JLabel jlbInputMap;
    private javax.swing.JLabel jlbInputMap1;
    private javax.swing.JLabel jlbInputMap2;
    private javax.swing.JLabel jlblUmc;
    private javax.swing.JTextField jtfinputgame;
    private javax.swing.JTextField jtfinputmap;
    private javax.swing.JTextField jtfoutputfolder;
    private javax.swing.JTextField jtfoutputgame;
    private javax.swing.JTextField jtfpacname;
    private org.jdesktop.swingx.JXList jxlistcustutpack;
    // End of variables declaration//GEN-END:variables

}
